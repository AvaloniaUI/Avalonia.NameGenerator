using System.Collections.Generic;
using System.Linq;
using Avalonia.NameGenerator.Domain;

namespace Avalonia.NameGenerator.Generator
{
    internal class InitializeComponentCodeGenerator: ICodeGenerator
    {
        public string GenerateCode(string className, string nameSpace, IEnumerable<ResolvedName> names) 
        {
            var properties = new List<string>();
            var initializations = new List<string>();
            foreach (var info in names)
            {
                properties.Add($"        {info.FieldModifier} global::{info.TypeName} {info.Name} {{ get; set; }}");
                initializations.Add($"            {info.Name} = this.FindControl<global::{info.TypeName}>(\"{info.Name}\");");
            }
            
            return $@"// <auto-generated />

using Avalonia.Controls;
using Avalonia.Markup.Xaml;

namespace {nameSpace}
{{
    partial class {className}
    {{
{string.Join("\n", properties)}

        public void InitializeComponent(bool loadXaml = true)
        {{
            if (loadXaml)
            {{
                AvaloniaXamlLoader.Load(this);
            }}

{string.Join("\n", initializations)}
        }}
    }}
}}
";
        }
    }
}